지하보다 지상팀 발표 시작하겠습니다.

다음 목차와 같이 시스템 개요, UseCase, Datamap, DB ER Diagram,
시퀀스 다이어그램, 클래스 다이어그램 순으로 설명하도록 하겠습니다.
-------------------------------------------------------------------
시스템 개요는 이전의 발표와 크게 달라진 점이 없기 때문에
이번 발표에서는 생략하도록 하겠습니다.

UseCase-------------------------------------------------------------------

다음은 P2P 전력거래의 UseCase입니다.
UseCase 설계도는 다음과 같습니다.

1) Actor-------------------------------------------------------------------

Actor는 판매자, 구매자, 웹 서버로 총 3개가 있습니다. 
판매자와 구매자는 거래를 하는 주체이고, 웹 서버는 판매자와 구매자 사이에서
전력 거래를 중개하고 거래 과정을 통괄하여 관리합니다.
그리고 기본 흐름은 총 5가지의 Action으로 이루어집니다.

2) P2P 전력거래 -> 2. 사건 흐름------------------------------------------

처음으로 T-1, 구매자가 웹페이지에서 '구매 신청' 버튼을 클릭했을 때입니다.

구매 신청 버튼이 클릭이 되면 웹서버는 transActionReq()를 호출하여
buyerValidTest() (바이어 벨리드 테스트)를 진행하고,
문제가 없다면 transaction_status를 1 즉, '구매 신청'상태로 만듭니다.
그 후 구매자의 id를 transaction테이블의 transaction_buyer_id에 저장합니다.


다음 T-2는 웹서버에서 판매자에게 구매 요청 확인 이메일을 전송하는 것 입니다.
웹서버는 판매자에게 구매신청이 온 것을 알리기 위해 sendEmail()함수를 
호출하여 user인자가 판매자일 경우 transaction 테이블의 transaction_seller_id와 
판매자의 user_id와 같으면 판매자에게  구매 요청 확인 내용의 이메일을 보내고,
user 인자가 구매자일 경우에는 transaction 테이블의 transaction_buyer_id와 
구매자의 user_id와 같으면 구매자에게
최종 승인 이메일을 보낸 뒤 다음 Action으로 넘어갑니다.


구매 요청 확인 이메일을 받은 판매자가
웹페이지에서 거래 수락 버튼을 클릭했을 때 T-3가 이행됩니다.
판매자가 거래 수락 버튼을 클릭하면 transActionApprove()함수를 호출하여
sellerValidationTest()를 호출하여 두 가지 유효성 검사를 통과하면
 transaction_status를 2 즉, '거래 수락'상태로 만듭니다.
통과하지 못했다면 대안상황 S-2가 이행됩니다.
그 후 구매자에게 최종 승인 메일을 보내기 위해
T-2의 구매자에게 최종 승인 메일을 보내는 sendEmail() 함수를 호출 합니다.


최종 승인 메일을 받은 구매자가 거래에 대한 최종 승인 버튼을 클릭했을 때
T-4가 이행됩니다.
구매자가 최종 승인 버튼을 클릭하면 transActionExecute()를 호출합니다.
transActionExecute()는 구매자, 판매자 유효성 테스트를 진행하고, 각각
Error가 발생하지 않았다면 transaction_status = 3, 즉 '거래 중' 상태로 변경합니다.
만약 에러가 발생하였다면 S-1또는 S-2 대안상황을 이행합니다.
그 후 T-2의 sendEmail()함수를 호출하여 구매자와 판매자 전부에게 
[“거래가 최종 승인되어 진행되고 있습니다.
아래 링크로. 접속하여 거래 상태를 확인해 주세요.”]
와 같은 이메일을 전송합니다.
그리고 transActionExecute()가 호출되기 전까지 checkTimeLimit()함수를 호출하여 
제한시간 60분내에 승인되지 않을 시에 대안 상황 S-3를 이행합니다.
만약 transActionExecute가 정상적으로 이행되면 마지막 T-5 Action을 이행합니다.


T-5는 웹서버에서 릴레이 개방 시그널을 전송하는 것입니다.
릴레이 개폐 여부를 결정하는 변수인 isChannelopen = True로 변경하고
relayOpenReq()함수를 호출하여 릴레이 채널 개방시그널을
HTTP프로토콜을 이용하여 JSON 형태로 전송합니다.

대안 흐름-------------------------------------------------------------------

다음은 대안 흐름입니다.

대안흐름 S-1은 구매자유효성 테스트로
탈락 조건은 구매자의 부족한 배터리 용량이
 판매 전력량을 수용할 수 없는 경우입니다.
유효성 테스트를 통과하지 못했다면
 웹서버에서 alertError()함수를 호출하여 에러 알림을 띄웁니다
그 후 transaction_status = 0으로 바꾼 뒤 transaction 테이블의 
transaction_buyer_id를 Undefined로 변경 후 거래프로세스를 종료합니다.


대안흐름 S-2는 판매자 유효성 테스트로
탈락 조건은 판매자의 배터리 충전량이 판매 전력량보다 적을 경우
그리고 판매자의 초당 생산량이 초당 소모량보다 적을 경우입니다.
통과하지 못했을 때 웹 서버에서 alertError()함수를 호출하여
 판매자에게 각 에러에 따른 에러 알림을 띄웁니다.
그 후 transaction_status를 0으로 바꾼뒤 거래 프로세스를 종료합니다.


대안 흐름 S-3는 구매자가 제한시간인 60분 이내로
최종 승인에 대한 응답이 없을 경우입니다.
sendErrorEmail()함수를 호출하여 구매자와 판매자에게 
[“구매자가 제한시간 내에 현재 거래에 대한 최종승인을 하지 않아
 자동으로 거래가 취소되었습니다. ”]
내용의 이메일을 전송하고 transaction_status를 0,
 transaction_buyer_id를 Undefined로 변경 후 거래 프로세스를 종료합니다.

사후 조건-------------------------------------------------------------------

해당 유스케이스에서는 사전조건으로 로그인, 판매글 등록이 있으며
사후 조건으로는 거래액 반영, 거래자 및 판매자 거래 유효성 검사,
 DB 저장이 있습니다.

Data Map-------------------------------------------------------------------

Data Map은 다음과 같습니다. (몇초 보여주고 넘어가기)

DB ER Diagram-------------------------------------------------------------------

DB ER Diagram은 다음과 같이 사용자 정보를 저장할 User와
기기 정보를 저장할 Product,
거래글 정보를 저장할 Transaction으로 구성되어 있습니다.

Sequence Diagram---------------------------------------------------------------

다음으로 Sequence Diagram입니다.
(간단하게 마우스로 보여주면서 하면 좋을듯)
화면에 표시된 그림을 보시면 이 부분이 구매자가 구매 요청을 하는 T-1이고,
이 부분이 대안상황 S-1에 대한 설명입니다.
이 부분이 판매자에게 이메일을 보내는 T-2 상황이고
판매자가 구매 수락을 하는 T-3상황,
대안흐름 S-2
제한시간에 의한 대안흐름 S-3
구매자가 최종 구매 버튼을 누르는 T-4,
마지막으로 릴레이 오픈 시그널을 보내는 T-5을 보실 수 있습니다.

Class Diagram------------------------------------------------------
다음으로 Class Diagram입니다.

우선 Main 클래스는 거래 중계를 위한 클래스입니다.
( 1)개요는 넘어가고 2)연산에서 설명, 함수명 읽어주기 )


다음은 Transaction 클래스입니다.
( 1)개요는 넘어가고 2)연산에서 설명, 함수명 읽어주기 )


마지막으로 User 클래스입니다.
( 1)개요는 넘어가고 2)연산에서 설명, 함수명 읽어주기 )


Class Diagram------------------------------------------------------

마지막으로 저희가 그린 Class Diagram입니다.

이상으로 발표 마치겠숨돠!